{
  "articles": [
    {
      "path": "index.html",
      "title": "Git, GitHub & RStudio",
      "description": "RStudio users can leverage git Version control to enhance reproducibility.",
      "author": [],
      "contents": "\r\nThe usethis package and the RStudio IDE will help you orchestrate your version control repositories as RStudio projects.\r\n\r\n\r\n\r\n\r\n\r\nSetup\r\nTo get started, make a free GitHub.com account. Make sure you have the latest versions of R, RStudio, and usethis. Then, setup your RStudio configuration using two key documents: Setup, and Managing Git(Hub) Credentials.\r\nTips\r\nClone or fork from GitHub\r\n\r\n\r\nusethis::create_from_github(\"https://github.com/data-and-visualization/git-tutorial\")\r\n\r\n\r\n\r\nCreate the GitHub repo from local\r\n\r\n\r\nlibrary(usethis)\r\nuse_git()          # initialize a git repo\r\nuse_git_ignore()\r\nuse_readme.Rmd()\r\nuse_ccby_license()\r\n# Before next step  → stage & commit changes\r\nuse_github()       # Connect local repo to GitHub\r\n\r\n\r\n\r\nRename default branch\r\n\r\n\r\nlibrary(usethis)\r\ngit_default_branch()\r\ngit_default_branch_rename()\r\ngit_default_branch_rediscover()\r\n\r\n\r\n\r\nset-up git and manage GitHub credentials\r\n\r\n\r\n# Sign-in to your GitHub account\r\n# Read: https://usethis.r-lib.org/articles/articles/git-credentials.html\r\n# Read: https://usethis.r-lib.org/articles/articles/usethis-setup.html\r\nusethis::create_github_token()\r\ngitcreds::gitcreds_set()\r\ngh::gh_whoami()\r\nusethis::git_sitrep()\r\nusethis::use_git_config(user.name = \"Jane Doe\", user.email = \"jane@example.com\")\r\nusethis::git_sitrep()\r\n\r\n\r\n\r\nNext Level…\r\nTake your reproducibility to the next level. Make your code citable by connecting your GitHub repo and your ORCID (unique author ID) through to the Zenodo archival repository. Now, every time you commit a milestone release, you also mint a DOI.\r\nShare a zero-install compute environment\r\n\r\nPublish your code in a binder.org container\r\n\r\n\r\n\r\n\r\n\r\n\r\nEverything you need is exemplified in binder-example for R that you can find on github\r\nThe key elements are an install.R and runtime.txt files. The content and format of each file is demonstrated properly at the GitHub repo. Browse and you will see.\r\nStep 1\r\n\r\n\r\n\r\nCreate an install.R file and store it in the RStudio Project’s root directory. Follow the example at https://github.com/binder-examples/r \r\n\r\nThis file should consist of install functions for each package used in your R code. If you’re not sure what packages you’re using, try running holepunch::write_compendium_description() and you will find the details listed in the DESCRIPTION file under the ‘Depends’ and ‘Remotes’ sections. IMPORTANT: Delete the DESCRIPTION file Before launching the binder build. In my experience the DESCRIPTION file will conflict with the binder’s build process.  For non-CRAN packages – specifically packages installed from GitHub – I recommend using the format: remotes::install_github(\"gadenbuie/countdown\") for each package that is not on CRAN. CRAN packages can follow the format: install.packages(\"dplyr\")\r\n\r\nCreate a runtime.txt file and store it in the RStudio Project’s root directory Follow the example at https://github.com/binder-examples/r \r\n\r\nNote: If you try using holepunch, it will store these files in a .binder subdirectory. In my experience this will cause the binder build to fail. For this reason, I don’t recommend using holepunch and I do recommend storing the two files in the Project root directory.\r\n\r\nStep 2\r\nGenerate a binder badge with holepunch::generate_badge(). This should store the badge in your GitHub’s project README.md file. Then commit and push your changes to GitHub; go to the README on GitHub, launch the build and wait for the long launch/build time.\r\n\r\n\r\n\r\nThe old documentation from this site can be found in the v.0.2019 release on GitHub.\r\n\r\n\r\n\r\n",
      "last_modified": "2022-04-08T14:55:24-04:00"
    },
    {
      "path": "resources.html",
      "title": "Resources",
      "author": [],
      "contents": "\r\nSlides\r\nResearch Reproducibility, 2021\r\nSocial Coding Sites\r\nhttps://github.com\r\nhttps://gitlab.com\r\nhttps://bitbucket.org\r\nDuke’s GitLab Instance\r\nManaging SSH keys\r\n\r\nGUI Git Clients\r\nRStudio – Free. Great for useRs\r\nSublime’s Merge – Downloaded and evaluated for free. $100 / 3-years of upgrades.\r\nGitKracken – Free if you have the GitHub Student Pack or the GitHub Teacher toolbox\r\nSourceTree – Free. (defaults to use with BitBucket)\r\nPackages\r\nhttps://usethis.r-lib.org/\r\nholepunch to make your reproducible code a container on binder.org\r\nFree Book\r\nHappy Git and GitHub for the useR\r\nHandy Article\r\n10 Common Problems / Solutions\r\nReproducibility\r\nWriting clear code: Tools for Reproducible Research\r\nInitial Steps Toward Reproducible Research\r\nMaking your research reproducible with TIER + R + GitHub Slides. Cetinkaya-Rundel, M. (2016). Open Science Framework. Retrieved from https://osf.io/phyau\r\n\r\n\r\n\r\n",
      "last_modified": "2022-04-08T14:55:24-04:00"
    }
  ],
  "collections": []
}
